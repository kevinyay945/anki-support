// Code generated by MockGen. DO NOT EDIT.
// Source: anki-support/helper (interfaces: Configer)

// Package helper is a generated GoMock package.
package helper

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConfiger is a mock of Configer interface.
type MockConfiger struct {
	ctrl     *gomock.Controller
	recorder *MockConfigerMockRecorder
}

// MockConfigerMockRecorder is the mock recorder for MockConfiger.
type MockConfigerMockRecorder struct {
	mock *MockConfiger
}

// NewMockConfiger creates a new mock instance.
func NewMockConfiger(ctrl *gomock.Controller) *MockConfiger {
	mock := &MockConfiger{ctrl: ctrl}
	mock.recorder = &MockConfigerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfiger) EXPECT() *MockConfigerMockRecorder {
	return m.recorder
}

// GoogleApiToken mocks base method.
func (m *MockConfiger) GoogleApiToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GoogleApiToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GoogleApiToken indicates an expected call of GoogleApiToken.
func (mr *MockConfigerMockRecorder) GoogleApiToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GoogleApiToken", reflect.TypeOf((*MockConfiger)(nil).GoogleApiToken))
}
