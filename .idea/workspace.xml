<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2c2b5569-fc02-4d72-b3d7-239692454973" name="Changes" comment="improve: edit anki audio file can overwrite origin file">
      <change beforePath="$PROJECT_DIR$/infrastructure/anki/anki.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/anki/anki.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/.gvm/gos/go1.21" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="2VTKrd66isKFgtYW91rVxDpEsbq" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/kevin",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="GoExtractInterfaceDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/helper" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.Test_edit_note_and_add_audio in anki-support/infrastructure/anki">
    <configuration name="Test_edit_note_and_add_audio in anki-support/infrastructure/anki" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="anki-support" />
      <working_directory value="$PROJECT_DIR$/infrastructure/anki" />
      <parameters value=" -testify.m ^Test_edit_note_and_add_audio$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="anki-support/infrastructure/anki" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSuiteInitAnki\E$/^\QTest_edit_note_and_add_audio\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_get_media_path in anki-support/infrastructure/anki" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="anki-support" />
      <working_directory value="$PROJECT_DIR$/infrastructure/anki" />
      <parameters value=" -testify.m ^Test_get_media_path$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="anki-support/infrastructure/anki" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSuiteInitAnki\E$/^\QTest_get_media_path\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_get_note_by_id in anki-support/infrastructure/anki" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="anki-support" />
      <working_directory value="$PROJECT_DIR$/infrastructure/anki" />
      <parameters value=" -testify.m ^Test_get_note_by_id$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="anki-support/infrastructure/anki" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSuiteInitAnki\E$/^\QTest_get_note_by_id\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.Test_edit_note_and_add_audio in anki-support/infrastructure/anki" />
        <item itemvalue="Go Test.Test_get_note_by_id in anki-support/infrastructure/anki" />
        <item itemvalue="Go Test.Test_get_media_path in anki-support/infrastructure/anki" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="improve: edit anki audio file can overwrite origin file" />
    <option name="LAST_COMMIT_MESSAGE" value="improve: edit anki audio file can overwrite origin file" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>