<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2c2b5569-fc02-4d72-b3d7-239692454973" name="Changes" comment="improve: edit anki audio file can overwrite origin file">
      <change afterPath="$PROJECT_DIR$/domain/v1/anki.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/domain/v1/anki_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/run.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/run.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/anki/anki.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/anki/anki.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/anki/anki_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/anki/anki_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/gcp/gcp.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/gcp/gcp.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/gcp/text_to_speech.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/gcp/text_to_speech.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/gcp/text_to_speech_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/gcp/text_to_speech_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/openai/make_sentence.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/openai/make_sentence.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/openai/make_sentence_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/openai/make_sentence_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/openai/openai.go" beforeDir="false" afterPath="$PROJECT_DIR$/infrastructure/openai/openai.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/.gvm/gos/go1.21" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;kevinyay945&quot;
  }
}</component>
  <component name="GitToolBoxStore">
    <option name="projectConfigVersion" value="5" />
  </component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="d7062949-9de7-4681-9e74-38ed0169598d" />
        <option name="url" value="git@github.com:kevinyay945/anki-support.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2VTKrd66isKFgtYW91rVxDpEsbq" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/kevin",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "settings.editor.selected.configurable": "com.maddyhome.idea.vim.ui.VimEmulationConfigurable"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/domain/v1" />
    </key>
    <key name="GoExtractInterfaceDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/infrastructure/openai" />
      <recent name="$PROJECT_DIR$/infrastructure/gcp" />
      <recent name="$PROJECT_DIR$/helper" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.Test_update_note_and_audio in anki-support/domain/v1">
    <configuration name="AnkiSuite in anki-support/domain/v1" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="anki-support" />
      <working_directory value="$PROJECT_DIR$/domain/v1" />
      <parameters value=" -testify.m ^Test_get_note_list_by_deck_name|Test_get_note_by_id|Test_get_todo_noteFromDeck$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="anki-support/domain/v1" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSuiteInitAnki\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_get_note_by_id in anki-support/domain/v1" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="anki-support" />
      <working_directory value="$PROJECT_DIR$/domain/v1" />
      <parameters value=" -testify.m ^Test_get_note_by_id$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="anki-support/domain/v1" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSuiteInitAnki\E$/^\QTest_get_note_by_id\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_get_note_list_by_deck_name in anki-support/domain/v1" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="anki-support" />
      <working_directory value="$PROJECT_DIR$/domain/v1" />
      <parameters value=" -testify.m ^Test_get_note_list_by_deck_name$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="anki-support/domain/v1" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSuiteInitAnki\E$/^\QTest_get_note_list_by_deck_name\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_update_note in anki-support/domain/v1" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="anki-support" />
      <working_directory value="$PROJECT_DIR$/domain/v1" />
      <parameters value=" -testify.m ^Test_update_note$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="anki-support/domain/v1" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSuiteInitAnki\E$/^\QTest_update_note\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_update_note_and_audio in anki-support/domain/v1" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="anki-support" />
      <working_directory value="$PROJECT_DIR$/domain/v1" />
      <parameters value=" -testify.m ^Test_update_note_and_audio$" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="anki-support/domain/v1" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSuiteInitAnki\E$/^\QTest_update_note_and_audio\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.Test_update_note_and_audio in anki-support/domain/v1" />
        <item itemvalue="Go Test.Test_update_note in anki-support/domain/v1" />
        <item itemvalue="Go Test.AnkiSuite in anki-support/domain/v1" />
        <item itemvalue="Go Test.Test_get_note_list_by_deck_name in anki-support/domain/v1" />
        <item itemvalue="Go Test.Test_get_note_by_id in anki-support/domain/v1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="LOCAL_CHANGES_DETAILS_PREVIEW_SHOWN" value="false" />
    <MESSAGE value="improve: edit anki audio file can overwrite origin file" />
    <option name="LAST_COMMIT_MESSAGE" value="improve: edit anki audio file can overwrite origin file" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>