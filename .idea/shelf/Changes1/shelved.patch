Index: infrastructure/gcp/gcp.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package gcp\n\nimport (\n\t\"anki-support/helper\"\n\ttexttospeech \"cloud.google.com/go/texttospeech/apiv1\"\n\t\"context\"\n\tlog \"github.com/sirupsen/logrus\"\n\t\"google.golang.org/api/option\"\n\t\"time\"\n)\n\ntype Client struct {\n\ttextToSpeechClient *texttospeech.Client\n}\n\nfunc NewClient() *Client {\n\tc := &Client{}\n\tfor {\n\t\ttoken := helper.Config.GoogleApiToken()\n\t\tif err := c.setClientByToken(token); err != nil {\n\t\t\ttime.Sleep(3 * time.Second)\n\t\t\tlog.Warnf(\"fail to connect to google api, retry...\")\n\t\t\tcontinue\n\t\t}\n\t\treturn c\n\t}\n}\nfunc (c *Client) Close() {\n\tc.textToSpeechClient.Close()\n}\n\nfunc (c *Client) setClientByToken(token string) (err error) {\n\ttokenByte := []byte(token)\n\tclient, err := texttospeech.NewClient(context.Background(), option.WithCredentialsJSON(tokenByte))\n\tif err != nil {\n\t\treturn\n\t}\n\tc.textToSpeechClient = client\n\treturn\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infrastructure/gcp/gcp.go b/infrastructure/gcp/gcp.go
--- a/infrastructure/gcp/gcp.go	(revision 2ab1e4fb639dbc12d4b2495f70bef1cf422e2993)
+++ b/infrastructure/gcp/gcp.go	(date 1694904546255)
@@ -9,12 +9,12 @@
 	"time"
 )
 
-type Client struct {
+type GCP struct {
 	textToSpeechClient *texttospeech.Client
 }
 
-func NewClient() *Client {
-	c := &Client{}
+func NewClient() GCPer {
+	c := &GCP{}
 	for {
 		token := helper.Config.GoogleApiToken()
 		if err := c.setClientByToken(token); err != nil {
@@ -25,11 +25,11 @@
 		return c
 	}
 }
-func (c *Client) Close() {
+func (c *GCP) Close() {
 	c.textToSpeechClient.Close()
 }
 
-func (c *Client) setClientByToken(token string) (err error) {
+func (c *GCP) setClientByToken(token string) (err error) {
 	tokenByte := []byte(token)
 	client, err := texttospeech.NewClient(context.Background(), option.WithCredentialsJSON(tokenByte))
 	if err != nil {
@@ -38,3 +38,10 @@
 	c.textToSpeechClient = client
 	return
 }
+
+//go:generate mockgen -destination=gcp.mock.go -package=gcp -self_package=anki-support/infrastructure/gcp . GCPer
+type GCPer interface {
+	Close()
+	setClientByToken(token string) (err error)
+	GenerateAudioByText(inputText string, outputPath string, outputFileName string) (outputFilePath string, err error)
+}
