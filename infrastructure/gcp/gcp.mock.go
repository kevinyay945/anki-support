// Code generated by MockGen. DO NOT EDIT.
// Source: anki-support/infrastructure/gcp (interfaces: GCPer)

// Package gcp is a generated GoMock package.
package gcp

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGCPer is a mock of GCPer interface.
type MockGCPer struct {
	ctrl     *gomock.Controller
	recorder *MockGCPerMockRecorder
}

// MockGCPerMockRecorder is the mock recorder for MockGCPer.
type MockGCPerMockRecorder struct {
	mock *MockGCPer
}

// NewMockGCPer creates a new mock instance.
func NewMockGCPer(ctrl *gomock.Controller) *MockGCPer {
	mock := &MockGCPer{ctrl: ctrl}
	mock.recorder = &MockGCPerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGCPer) EXPECT() *MockGCPerMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockGCPer) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockGCPerMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockGCPer)(nil).Close))
}

// GenerateAudioByText mocks base method.
func (m *MockGCPer) GenerateAudioByText(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateAudioByText", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateAudioByText indicates an expected call of GenerateAudioByText.
func (mr *MockGCPerMockRecorder) GenerateAudioByText(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateAudioByText", reflect.TypeOf((*MockGCPer)(nil).GenerateAudioByText), arg0, arg1, arg2)
}

// setClientByToken mocks base method.
func (m *MockGCPer) setClientByToken(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "setClientByToken", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// setClientByToken indicates an expected call of setClientByToken.
func (mr *MockGCPerMockRecorder) setClientByToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "setClientByToken", reflect.TypeOf((*MockGCPer)(nil).setClientByToken), arg0)
}
