// Code generated by MockGen. DO NOT EDIT.
// Source: anki-support/domain (interfaces: TextToSpeecher)

// Package domain is a generated GoMock package.
package domain

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTextToSpeecher is a mock of TextToSpeecher interface.
type MockTextToSpeecher struct {
	ctrl     *gomock.Controller
	recorder *MockTextToSpeecherMockRecorder
}

// MockTextToSpeecherMockRecorder is the mock recorder for MockTextToSpeecher.
type MockTextToSpeecherMockRecorder struct {
	mock *MockTextToSpeecher
}

// NewMockTextToSpeecher creates a new mock instance.
func NewMockTextToSpeecher(ctrl *gomock.Controller) *MockTextToSpeecher {
	mock := &MockTextToSpeecher{ctrl: ctrl}
	mock.recorder = &MockTextToSpeecherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTextToSpeecher) EXPECT() *MockTextToSpeecherMockRecorder {
	return m.recorder
}

// GetJapaneseSound mocks base method.
func (m *MockTextToSpeecher) GetJapaneseSound(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJapaneseSound", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJapaneseSound indicates an expected call of GetJapaneseSound.
func (mr *MockTextToSpeecherMockRecorder) GetJapaneseSound(arg0 interface{}) *TextToSpeecherGetJapaneseSoundCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJapaneseSound", reflect.TypeOf((*MockTextToSpeecher)(nil).GetJapaneseSound), arg0)
	return &TextToSpeecherGetJapaneseSoundCall{Call: call}
}

// TextToSpeecherGetJapaneseSoundCall wrap *gomock.Call
type TextToSpeecherGetJapaneseSoundCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *TextToSpeecherGetJapaneseSoundCall) Return(arg0 string, arg1 error) *TextToSpeecherGetJapaneseSoundCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *TextToSpeecherGetJapaneseSoundCall) Do(f func(string) (string, error)) *TextToSpeecherGetJapaneseSoundCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *TextToSpeecherGetJapaneseSoundCall) DoAndReturn(f func(string) (string, error)) *TextToSpeecherGetJapaneseSoundCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
