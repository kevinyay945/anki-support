// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"anki-support/application"
	"anki-support/infrastructure"
	"anki-support/interfaces/cmd"
	"anki-support/lib/anki"
	"anki-support/lib/gcp"
	"anki-support/lib/log"
	"anki-support/lib/openai"
)

import (
	_ "github.com/google/subcommands"
	_ "github.com/google/wire"
)

// Injectors from di_wire.go:

// InitializeAuthCmd creates an Auth Init Struct. It will error if the Event is staffed with
// a grumpy greeter.
func InitializeDICmd() *DI {
	logger := log.NewLogger()
	ankier := anki.NewClient(logger)
	domainAnkier := infrastructure.NewAnki(ankier)
	ankiRepositorier := application.NewAnkiRepository(domainAnkier)
	openAIer := openai.NewClient(logger)
	gpTer := infrastructure.NewGPT(openAIer)
	gcPer := gcp.NewGCP()
	textToSpeecher := infrastructure.NewTextToSpeech(gcPer)
	ankiOperatorFactorier := application.NewAnkiOperatorFactory(gpTer, textToSpeecher, domainAnkier)
	runCmd := cmd.NewRunCmd(ankiRepositorier, ankiOperatorFactorier)
	di := NewDI(runCmd)
	return di
}
